{
  "name": "surrealql",
  "word": "identifier",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "comment"
          },
          {
            "type": "SYMBOL",
            "name": "tokens"
          }
        ]
      }
    },
    "tokens": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "operator"
            },
            {
              "type": "SYMBOL",
              "name": "punctuation"
            },
            {
              "type": "SYMBOL",
              "name": "delimiter"
            },
            {
              "type": "SYMBOL",
              "name": "type"
            },
            {
              "type": "SYMBOL",
              "name": "function"
            },
            {
              "type": "SYMBOL",
              "name": "variable"
            },
            {
              "type": "SYMBOL",
              "name": "string"
            },
            {
              "type": "SYMBOL",
              "name": "bool"
            },
            {
              "type": "SYMBOL",
              "name": "nothing"
            },
            {
              "type": "SYMBOL",
              "name": "record"
            },
            {
              "type": "SYMBOL",
              "name": "number"
            },
            {
              "type": "SYMBOL",
              "name": "constant"
            },
            {
              "type": "SYMBOL",
              "name": "future"
            },
            {
              "type": "SYMBOL",
              "name": "casting"
            },
            {
              "type": "SYMBOL",
              "name": "property"
            },
            {
              "type": "SYMBOL",
              "name": "duration"
            },
            {
              "type": "SYMBOL",
              "name": "keyword"
            },
            {
              "type": "SYMBOL",
              "name": "scripting_function"
            }
          ]
        }
      ]
    },
    "scripting_function": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "function(){"
        },
        {
          "type": "PREC",
          "value": 2,
          "content": {
            "type": "SYMBOL",
            "name": "scripting_content"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "};"
            },
            {
              "type": "STRING",
              "value": "},"
            }
          ]
        }
      ]
    },
    "scripting_content": {
      "type": "REPEAT1",
      "content": {
        "type": "SYMBOL",
        "name": "_scripting_statement"
      }
    },
    "_scripting_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "tokens"
        }
      ]
    },
    "future": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "<future>"
        }
      ]
    },
    "casting": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "<(bool|int|float|string|number|decimal|datetime|duration)>"
        }
      ]
    },
    "property": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "[a-zA-Z0-9_]+:"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_]+[a-zA-Z0-9_]*"
    },
    "duration": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "\\d+(y|w|d|h|m|s)+"
        }
      ]
    },
    "constant": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "MATH::[A-Z_0-9]+"
        }
      ]
    },
    "number": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "\\d+(\\.\\d+)?"
        }
      ]
    },
    "record": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "[a-zA-Z0-9_]+:[a-zA-Z0-9_]+"
        },
        {
          "type": "PATTERN",
          "value": "[a-zA-Z0-9_]+:(`|⟨)([a-zA-Z0-9_]|-)+(`|⟩)"
        }
      ]
    },
    "keyword": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "use|USE"
          },
          {
            "type": "PATTERN",
            "value": "ns|NS"
          },
          {
            "type": "PATTERN",
            "value": "db|DB"
          },
          {
            "type": "PATTERN",
            "value": "let|LET"
          },
          {
            "type": "PATTERN",
            "value": "begin|BEGIN"
          },
          {
            "type": "PATTERN",
            "value": "transaction|TRANSACTION"
          },
          {
            "type": "PATTERN",
            "value": "cancel|CANCEL"
          },
          {
            "type": "PATTERN",
            "value": "commit|COMMIT"
          },
          {
            "type": "PATTERN",
            "value": "if|IF"
          },
          {
            "type": "PATTERN",
            "value": "else|ELSE"
          },
          {
            "type": "PATTERN",
            "value": "then|THEN"
          },
          {
            "type": "PATTERN",
            "value": "end|END"
          },
          {
            "type": "PATTERN",
            "value": "select|SELECT"
          },
          {
            "type": "PATTERN",
            "value": "from|FROM"
          },
          {
            "type": "PATTERN",
            "value": "where|WHERE"
          },
          {
            "type": "PATTERN",
            "value": "split|SPLIT"
          },
          {
            "type": "PATTERN",
            "value": "at|AT"
          },
          {
            "type": "PATTERN",
            "value": "group|GROUP"
          },
          {
            "type": "PATTERN",
            "value": "by|BY"
          },
          {
            "type": "PATTERN",
            "value": "order|ORDER"
          },
          {
            "type": "PATTERN",
            "value": "collate|COLLATE"
          },
          {
            "type": "PATTERN",
            "value": "numeric|NUMERIC"
          },
          {
            "type": "PATTERN",
            "value": "asc|ASC"
          },
          {
            "type": "PATTERN",
            "value": "desc|DESC"
          },
          {
            "type": "PATTERN",
            "value": "limit|LIMIT"
          },
          {
            "type": "PATTERN",
            "value": "start|START"
          },
          {
            "type": "PATTERN",
            "value": "fetch|FETCH"
          },
          {
            "type": "PATTERN",
            "value": "timeout|TIMEOUT"
          },
          {
            "type": "PATTERN",
            "value": "parallel|PARALLEL"
          },
          {
            "type": "PATTERN",
            "value": "insert|INSERT"
          },
          {
            "type": "PATTERN",
            "value": "ignore|IGNORE"
          },
          {
            "type": "PATTERN",
            "value": "into|INTO"
          },
          {
            "type": "PATTERN",
            "value": "values|VALUES"
          },
          {
            "type": "PATTERN",
            "value": "on|ON"
          },
          {
            "type": "PATTERN",
            "value": "duplicate|DUPLICATE"
          },
          {
            "type": "PATTERN",
            "value": "key|KEY"
          },
          {
            "type": "PATTERN",
            "value": "update|UPDATE"
          },
          {
            "type": "PATTERN",
            "value": "create|CREATE"
          },
          {
            "type": "PATTERN",
            "value": "content|CONTENT"
          },
          {
            "type": "PATTERN",
            "value": "set|SET"
          },
          {
            "type": "PATTERN",
            "value": "return|RETURN"
          },
          {
            "type": "PATTERN",
            "value": "before|BEFORE"
          },
          {
            "type": "PATTERN",
            "value": "after|AFTER"
          },
          {
            "type": "PATTERN",
            "value": "diff|DIFF"
          },
          {
            "type": "PATTERN",
            "value": "merge|MERGE"
          },
          {
            "type": "PATTERN",
            "value": "patch|PATCH"
          },
          {
            "type": "PATTERN",
            "value": "relate|RELATE"
          },
          {
            "type": "PATTERN",
            "value": "delete|DELETE"
          },
          {
            "type": "PATTERN",
            "value": "define|DEFINE"
          },
          {
            "type": "PATTERN",
            "value": "namespace|NAMESPACE"
          },
          {
            "type": "PATTERN",
            "value": "database|DATABASE"
          },
          {
            "type": "PATTERN",
            "value": "login|LOGIN"
          },
          {
            "type": "PATTERN",
            "value": "password|PASSWORD"
          },
          {
            "type": "PATTERN",
            "value": "passhash|PASSHASH"
          },
          {
            "type": "PATTERN",
            "value": "token|TOKEN"
          },
          {
            "type": "PATTERN",
            "value": "scope|SCOPE"
          },
          {
            "type": "PATTERN",
            "value": "type|TYPE"
          },
          {
            "type": "PATTERN",
            "value": "value|VALUE"
          },
          {
            "type": "PATTERN",
            "value": "session|SESSION"
          },
          {
            "type": "PATTERN",
            "value": "signup|SIGNUP"
          },
          {
            "type": "PATTERN",
            "value": "signin|SIGNIN"
          },
          {
            "type": "PATTERN",
            "value": "table|TABLE"
          },
          {
            "type": "PATTERN",
            "value": "drop|DROP"
          },
          {
            "type": "PATTERN",
            "value": "schemafull|SCHEMAFULL"
          },
          {
            "type": "PATTERN",
            "value": "schemaless|SCHEMALESS"
          },
          {
            "type": "PATTERN",
            "value": "as|AS"
          },
          {
            "type": "PATTERN",
            "value": "permissions|PERMISSIONS"
          },
          {
            "type": "PATTERN",
            "value": "full|FULL"
          },
          {
            "type": "PATTERN",
            "value": "for|FOR"
          },
          {
            "type": "PATTERN",
            "value": "event|EVENT"
          },
          {
            "type": "PATTERN",
            "value": "when|WHEN"
          },
          {
            "type": "PATTERN",
            "value": "assert|ASSERT"
          },
          {
            "type": "PATTERN",
            "value": "index|INDEX"
          },
          {
            "type": "PATTERN",
            "value": "field|FIELD"
          },
          {
            "type": "PATTERN",
            "value": "fields|FIELDS"
          },
          {
            "type": "PATTERN",
            "value": "columns|COLUMNS"
          },
          {
            "type": "PATTERN",
            "value": "unique|UNIQUE"
          },
          {
            "type": "PATTERN",
            "value": "remove|REMOVE"
          },
          {
            "type": "PATTERN",
            "value": "sleep|SLEEP"
          },
          {
            "type": "PATTERN",
            "value": "info|INFO"
          },
          {
            "type": "PATTERN",
            "value": "kv|KV"
          },
          {
            "type": "PATTERN",
            "value": "function|FUNCTION"
          },
          {
            "type": "PATTERN",
            "value": "param|PARAM"
          }
        ]
      }
    },
    "operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "&&"
        },
        {
          "type": "PATTERN",
          "value": "and|AND"
        },
        {
          "type": "STRING",
          "value": "||"
        },
        {
          "type": "PATTERN",
          "value": "or|OR"
        },
        {
          "type": "STRING",
          "value": "??"
        },
        {
          "type": "STRING",
          "value": "?:"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "PATTERN",
          "value": "is|IS"
        },
        {
          "type": "STRING",
          "value": "!="
        },
        {
          "type": "STRING",
          "value": "IS NOT"
        },
        {
          "type": "STRING",
          "value": "=="
        },
        {
          "type": "STRING",
          "value": "?="
        },
        {
          "type": "STRING",
          "value": "*="
        },
        {
          "type": "STRING",
          "value": "~"
        },
        {
          "type": "STRING",
          "value": "!~"
        },
        {
          "type": "STRING",
          "value": "?~"
        },
        {
          "type": "STRING",
          "value": "*~"
        },
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "STRING",
          "value": "<="
        },
        {
          "type": "STRING",
          "value": ">"
        },
        {
          "type": "STRING",
          "value": ">="
        },
        {
          "type": "STRING",
          "value": "+"
        },
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "STRING",
          "value": "*"
        },
        {
          "type": "PATTERN",
          "value": "x|X"
        },
        {
          "type": "STRING",
          "value": "/"
        },
        {
          "type": "STRING",
          "value": "÷"
        },
        {
          "type": "STRING",
          "value": "**"
        },
        {
          "type": "PATTERN",
          "value": "in|IN"
        },
        {
          "type": "PATTERN",
          "value": "contains|CONTAINS"
        },
        {
          "type": "STRING",
          "value": "∋"
        },
        {
          "type": "PATTERN",
          "value": "containsnot|CONTAINSNOT"
        },
        {
          "type": "STRING",
          "value": "∌"
        },
        {
          "type": "PATTERN",
          "value": "containsall|CONTAINSALL"
        },
        {
          "type": "STRING",
          "value": "⊇"
        },
        {
          "type": "PATTERN",
          "value": "containsany|CONTAINSANY"
        },
        {
          "type": "STRING",
          "value": "⊃"
        },
        {
          "type": "PATTERN",
          "value": "containsnone|CONTAINSNONE"
        },
        {
          "type": "STRING",
          "value": "⊅"
        },
        {
          "type": "PATTERN",
          "value": "inside|INSIDE"
        },
        {
          "type": "STRING",
          "value": "∈"
        },
        {
          "type": "PATTERN",
          "value": "notinside|NOTINSIDE"
        },
        {
          "type": "STRING",
          "value": "NOT IN"
        },
        {
          "type": "STRING",
          "value": "∉"
        },
        {
          "type": "PATTERN",
          "value": "allinside|ALLINSIDE"
        },
        {
          "type": "STRING",
          "value": "⊆"
        },
        {
          "type": "PATTERN",
          "value": "anyinside|ANYINSIDE"
        },
        {
          "type": "STRING",
          "value": "⊂"
        },
        {
          "type": "PATTERN",
          "value": "noneinside|NONEINSIDE"
        },
        {
          "type": "STRING",
          "value": "⊄"
        },
        {
          "type": "PATTERN",
          "value": "outside|OUTSIDE"
        },
        {
          "type": "PATTERN",
          "value": "intersects|INTERSECTS"
        }
      ]
    },
    "punctuation": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "STRING",
          "value": "]"
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "STRING",
          "value": "->"
        },
        {
          "type": "STRING",
          "value": "<-"
        }
      ]
    },
    "delimiter": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": ","
        },
        {
          "type": "STRING",
          "value": ";"
        },
        {
          "type": "STRING",
          "value": ":"
        }
      ]
    },
    "type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "datatype"
        },
        {
          "type": "SYMBOL",
          "name": "algotype"
        }
      ]
    },
    "datatype": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "any"
        },
        {
          "type": "STRING",
          "value": "array"
        },
        {
          "type": "STRING",
          "value": "bool"
        },
        {
          "type": "STRING",
          "value": "datetime"
        },
        {
          "type": "STRING",
          "value": "decimal"
        },
        {
          "type": "STRING",
          "value": "duration"
        },
        {
          "type": "STRING",
          "value": "float"
        },
        {
          "type": "STRING",
          "value": "int"
        },
        {
          "type": "STRING",
          "value": "number"
        },
        {
          "type": "STRING",
          "value": "object"
        },
        {
          "type": "STRING",
          "value": "string"
        },
        {
          "type": "STRING",
          "value": "record"
        },
        {
          "type": "STRING",
          "value": "geometry"
        }
      ]
    },
    "algotype": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "EDDSA"
        },
        {
          "type": "STRING",
          "value": "ES256"
        },
        {
          "type": "STRING",
          "value": "ES384"
        },
        {
          "type": "STRING",
          "value": "ES512"
        },
        {
          "type": "STRING",
          "value": "HS256"
        },
        {
          "type": "STRING",
          "value": "HS384"
        },
        {
          "type": "STRING",
          "value": "HS512"
        },
        {
          "type": "STRING",
          "value": "PS256"
        },
        {
          "type": "STRING",
          "value": "PS384"
        },
        {
          "type": "STRING",
          "value": "PS512"
        },
        {
          "type": "STRING",
          "value": "RS256"
        },
        {
          "type": "STRING",
          "value": "RS384"
        },
        {
          "type": "STRING",
          "value": "RS512"
        }
      ]
    },
    "function": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "fn::[a-zA-Z0-9_]+"
        },
        {
          "type": "PATTERN",
          "value": "array::[a-z]+((::)[a-z]+)?"
        },
        {
          "type": "STRING",
          "value": "count"
        },
        {
          "type": "PATTERN",
          "value": "crypto::[a-z0-9]+((::)[a-z0-9]+)?"
        },
        {
          "type": "PATTERN",
          "value": "geo::[a-z]+((::)[a-z]+)?"
        },
        {
          "type": "PATTERN",
          "value": "http::[a-z]+"
        },
        {
          "type": "PATTERN",
          "value": "is::[a-z]+"
        },
        {
          "type": "PATTERN",
          "value": "math::[a-z]+"
        },
        {
          "type": "PATTERN",
          "value": "meta::[a-z]+"
        },
        {
          "type": "PATTERN",
          "value": "parse::[a-z]+::[a-z]+"
        },
        {
          "type": "PATTERN",
          "value": "rand(::[a-z]+(::[a-z0-9]+)?)?"
        },
        {
          "type": "PATTERN",
          "value": "session::[a-z]+"
        },
        {
          "type": "PATTERN",
          "value": "sleep"
        },
        {
          "type": "PATTERN",
          "value": "string::[a-zA-Z]+"
        },
        {
          "type": "PATTERN",
          "value": "time::[a-z]+"
        },
        {
          "type": "PATTERN",
          "value": "type::[a-z]+"
        },
        {
          "type": "PATTERN",
          "value": "function"
        }
      ]
    },
    "bool": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "true|TRUE"
        },
        {
          "type": "PATTERN",
          "value": "false|FALSE"
        }
      ]
    },
    "nothing": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "none|NONE"
        },
        {
          "type": "PATTERN",
          "value": "null|NULL"
        }
      ]
    },
    "variable": {
      "type": "PATTERN",
      "value": "\\$[a-zA-Z_]+[a-zA-Z0-9_]*(\\.[a-zA-Z0-9_]+)*"
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "\\/\\*.*\\*\\/"
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "--"
              },
              {
                "type": "PATTERN",
                "value": ".*"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "/*"
              },
              {
                "type": "PATTERN",
                "value": ".*"
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "\n"
                    },
                    {
                      "type": "PATTERN",
                      "value": ".*"
                    }
                  ]
                }
              },
              {
                "type": "STRING",
                "value": "*/"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "#"
              },
              {
                "type": "PATTERN",
                "value": ".*"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "//"
              },
              {
                "type": "PATTERN",
                "value": ".*"
              }
            ]
          }
        ]
      }
    },
    "string": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "'"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "PATTERN",
                    "value": "[^\\\\']"
                  },
                  {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": "\\"
                      },
                      {
                        "type": "PATTERN",
                        "value": "."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "STRING",
              "value": "'"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\""
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "PATTERN",
                    "value": "[^\\\\\"]"
                  },
                  {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": "\\"
                      },
                      {
                        "type": "PATTERN",
                        "value": "."
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "STRING",
              "value": "\""
            }
          ]
        }
      ]
    },
    "any_char": {
      "type": "PATTERN",
      "value": "[^{}\\n]"
    },
    "new_line": {
      "type": "STRING",
      "value": "\n"
    }
  },
  "extras": [
    {
      "type": "STRING",
      "value": "s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
